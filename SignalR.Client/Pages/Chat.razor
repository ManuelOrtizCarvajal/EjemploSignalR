@page "/chat"
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<h3>Chat</h3>
@if (isConnected)
{
    <input type="text" @bind-value="@userInput" placeholder="Ingrese Usuario"/>
    <input type="text"  @bind-value="@messageInput" placeholder="Ingrese Mensaje"/>
    <button @onclick="Send">Enviar</button>

    <ul id="messageList">
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}
else
{
    <span>Conectando...</span>    
}

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    public string userInput;
    public string messageInput;
    public bool isConnected => hubConnection?.State == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        await Hubstart();
    }

    private async Task Hubstart()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("https://localhost:7261/chathub")).Build();
        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            InvokeAsync(StateHasChanged);
            
        });

        await hubConnection.StartAsync();
    }

    private async Task Send() 
    { 
        if (!isConnected)
            await Hubstart();

       await  hubConnection.SendAsync("SendMessage", userInput, messageInput); 
    }
}
